# -*- coding: utf-8 -*-
"""sula_meli_part2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10JjZhhOzibr2vpe78dg4GrLDQ2RaPdwy

## Task 1

Exploração dos endpoints da API. Utilizando o `site_id` MLB para Brasil.
"""

import requests

# Simple search
hits = 5
query = "chromecast"
url = f"https://api.mercadolibre.com/sites/MLB/search?q={query}&limit={hits}#json"
response = requests.get(url)
search_result = response.json()

search_result

# Categories
url = "https://api.mercadolibre.com/sites/MLB/categories"
response = requests.get(url)
example_categories = response.json()

example_categories

# Advanced search Items by Category
category = "MLB1051"
url = f"https://api.mercadolibre.com/sites/MLB/search?category={category}"
response = requests.get(url)
item_examples = response.json()

len(item_examples['results'])

item_examples['results'][0]

# Get Items
item_id = "MLB4559453352"
url = f"https://api.mercadolibre.com/items/{item_id}"
response = requests.get(url)
item_example = response.json()

item_example

"""Decidi usar a pesquisa de itens por categoria. E como os dados que eu gostaria de analisar já estão no retorno do search, decidi não fazer uma nova chamada get em items.

## Task 2
"""

def get_categories():
    url = "https://api.mercadolibre.com/sites/MLB/categories"
    response = requests.get(url)
    categories = response.json()
    return categories

def search_items_by_category(category_id:str):
    url = f"https://api.mercadolibre.com/sites/MLB/search?category={category_id}"
    response = requests.get(url)
    items = response.json()['results']
    return items

all_categories = get_categories()[10:20]
all_categories

all_items_metadata = []
for category in all_categories:
    items = search_items_by_category(category['id'])
    for item in items:
        # Baseado nos dados retornados, escolhi os seguintes para análise
        metadata = {
            "id": item['id'],
            "title": item['title'],
            "condition": item['condition'],
            "category_id": item['category_id'],
            "category_name": category['name'],
            "seller_id": item['seller']['id'],
            "seller_nickname": item['seller']['nickname'],
            "original_price": item['original_price'],
            "sale_price": item['sale_price']['amount'],
            "available_quantity": item['available_quantity'],
            "store_pick_up": item['shipping']['store_pick_up'],
            "free_shipping": item['shipping']['free_shipping'],
            "state_name": item['address']['state_name'],
            "city_name": item['address']['city_name'],
        }
        all_items_metadata.append(metadata)

all_items_metadata[:5]

len(all_items_metadata)

"""## Task 3"""

import csv

keys = all_items_metadata[0].keys()

with open('all_items_metadata.csv', 'w', newline='') as output_file:
    dict_writer = csv.DictWriter(output_file, keys)
    dict_writer.writeheader()
    dict_writer.writerows(all_items_metadata)

